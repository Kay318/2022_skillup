# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'setup_language.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
# from PyQt5 import QtCore, QtWidgets
from PyQt5.QtWidgets import *
from functools import partial
from PyQt5.QtGui import QKeyEvent
from PyQt5.QtCore import Qt, QCoreApplication
from UI.MainWindow import Ui_MainWindow
from PyQt5.QtGui import QCloseEvent

from pathlib import Path
sys.path.append(str(Path(__file__).parents[1]))
from Database.DB import DBManager


class UI_Setup_Field(QWidget, DBManager):
    def __init__(self, mainwindow):
        super().__init__()
        self.cnt = 0
        self.mainwin = mainwindow
        self.start = True

    def setupUi_Field(self):
        # 언어별 경로 설정 메인 창
        if self.start:
            self.resize(600, 400)
            self.setWindowTitle("엑셀에 추가할 필드 설정")

            # 전체 화면 배치
            self.verticalLayout = QVBoxLayout(self)

            # DB에서 언어 설정 불러옴
            self.c.execute('SELECT * FROM Setup_Field')
            dataList = self.c.fetchall()

            if len(dataList) > 0:
                for data in dataList:
                    self.set_data()
                    globals()[f'lineEdit{self.cnt-1}'].setText(data[0])

                if len(dataList) < 6:
                    for _ in range(6-len(dataList)):
                        self.set_data()

            else:
                for _ in range(6):
                    self.set_data()

            # [확인], [취소] 버튼
            self.ok_horizontalLayout = QHBoxLayout()
            self.ok_horizontalLayout.setAlignment(Qt.AlignRight)
            
            self.ok_Button = QPushButton("확인", self)
            self.ok_horizontalLayout.addWidget(self.ok_Button)
            self.cancel_Button = QPushButton("취소", self)
            self.ok_horizontalLayout.addWidget(self.cancel_Button)
            self.verticalLayout.addLayout(self.ok_horizontalLayout)

            # 버튼 이벤트 함수
            self.sl_set_slot()

        self.start = False

    def set_data(self):
        globals()[f'horizontalLayout{self.cnt}'] = QHBoxLayout()

        globals()[f'label{self.cnt}'] = QLabel()
        globals()[f'label{self.cnt}'].setText(f"{self.cnt+1}")
        globals()[f'horizontalLayout{self.cnt}'].addWidget(globals()[f'label{self.cnt}'])

        globals()[f'lineEdit{self.cnt}'] = QLineEdit()
        globals()[f'horizontalLayout{self.cnt}'].addWidget(globals()[f'lineEdit{self.cnt}'])

        # 0725
        for val in range(self.cnt + 1):

            if globals()[f'lineEdit{val}'].text() == "":
                globals()[f'lineEdit{val}'].setFocus()
                break

        self.verticalLayout.addLayout(globals()[f'horizontalLayout{self.cnt}'])

        self.cnt += 1

    def sl_set_slot(self):
        self.ok_Button.clicked.connect(self.ok_Button_clicked)
        self.cancel_Button.clicked.connect(self.close)

    def ok_Button_clicked(self):
        checkOverlap = []

        # 중복 체크
        for i in range(1, self.cnt):
            if globals()[f'lineEdit{i}'].text() != "":
                if globals()[f'lineEdit{i}'].text() not in checkOverlap:
                    checkOverlap.append(globals()[f'lineEdit{i}'].text())
                else:
                    QMessageBox.about(self, '주의', '중복 라인이 있습니다.')
                    return

        # DB에 저장
        # 0728
        self.c.execute(f"DELETE FROM Setup_Field")

        for i in range(self.cnt):
            if globals()[f'lineEdit{i}'].text() != "":
                try:
                    self.dbConn.execute(f"INSERT INTO Setup_Field VALUES (?)", 
                            ((globals()[f'lineEdit{i}'].text(),)))
                    
                except RuntimeError:
                    continue
        
        self.dbConn.commit()

        for i in range(self.mainwin.field_gridLayout.count()):
            self.mainwin.field_gridLayout.itemAt(i).widget().deleteLater()
        self.mainwin.set_field()

        self.close()
        
    def closeEvent(self, event) -> None:
        self.c.execute('SELECT * FROM Setup_Field')
        dataList = self.c.fetchall()
        temp_cnt = 1

        dbList = [data[0] for data in dataList]
        lineList = [globals()[f'lineEdit{i}'].text() for i in range(self.cnt) if globals()[f'lineEdit{i}'].text() != ""]

        if dbList != lineList:
            reply = QMessageBox.question(self, '알림', '변경사항이 있습니다.\n취소하시겠습니까?',
                                    QMessageBox.Yes | QMessageBox.No, QMessageBox.No)

            if reply == QMessageBox.Yes:
                for i in range(self.cnt):
                    globals()[f'lineEdit{i}'].setText("")

                if len(dataList) > 0:
                    for data in dataList:
                        globals()[f'lineEdit{temp_cnt-1}'].setText(data[0])
                        temp_cnt += 1
                event.accept()
            else:
                event.ignore()
                
        self.mainwin.setDisabled(False)

    # 0725
    def keyPressEvent(self, a0: QKeyEvent) -> None:
        
        KEY_ENTER = 16777220

        print (f"a0.key() : {a0.key()}")
        if a0.key() == KEY_ENTER:
            self.ok_Button_clicked()

if __name__ == "__main__":
    import sys
    app = QApplication(sys.argv)
    ui = UI_Setup_Field()
    ui.setupUi_Field()
    ui.show()
    sys.exit(app.exec_())
