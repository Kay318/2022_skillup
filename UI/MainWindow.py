# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5.QtCore import *
from PyQt5.QtGui import *
from PyQt5.QtWidgets import *
from functools import partial
from PIL import Image
from UI.ImageView import ImageViewer
import sys
import time
import os

from pathlib import Path
sys.path.append(str(Path(__file__).parents[1]))
from Database.DB import DBManager

print(os.getcwd())

class Ui_MainWindow(QMainWindow, DBManager):
    def __init__(self):
        super().__init__()
        self.cnt = 0
        self.setupUi()

    def setupUi(self):
        self.widget = QWidget()
        self.resize(1472, 876)
        self.setWindowTitle("다국어 자동화")

        # 전체 화면 배치
        self.horizontalLayout = QHBoxLayout(self.widget)

        # 좌측 이미지 리스트
        self.img_scrollArea = QScrollArea()
        self.img_scrollArea.setWidgetResizable(True)
        self.img_scrollArea.setMaximumWidth(88)
    
        self.img_scrollAreaWidgetContents = QWidget()
        self.img_VBoxLayout = QVBoxLayout(self.img_scrollAreaWidgetContents)
        self.img_VBoxLayout.setAlignment(Qt.AlignTop)

        self.img_scrollArea.setWidget(self.img_scrollAreaWidgetContents)
        self.horizontalLayout.addWidget(self.img_scrollArea)

        # 우측 큰 이미지
        self.right_VBoxLayout = QVBoxLayout()

        self.img_Label = QLabel()
        self.img_Label.setMinimumSize(1350, 600)
        self.img_Label.setStyleSheet("color: gray;"
                             "border-style: solid;"
                             "border-width: 1px;"
                             "border-color: #747474;"
                             "border-radius: 1px")

        self.right_VBoxLayout.addWidget(self.img_Label)

        # 이미지 설명, 스크립트명
        self.bottom_HBoxLayout = QHBoxLayout()
        self.bottomL_VBoxLayout = QVBoxLayout()
        self.bottomR_VBoxLayout = QVBoxLayout()
        
        self.field_gridLayout = QGridLayout()

        self.set_field()
        self.cnt = 0

        self.bottomL_VBoxLayout.addLayout(self.field_gridLayout)

        # 평가 목록

        self.testList_groupbox = QGroupBox("평가 목록")
        self.testList_groupbox.setMinimumSize(1141, 151)

        self.testList_Layout = QHBoxLayout()
        self.testList_groupbox.setLayout(self.testList_Layout)

        self.bottomL_VBoxLayout.addWidget(self.testList_groupbox)
        self.bottom_HBoxLayout.addLayout(self.bottomL_VBoxLayout)

        # 저장 버튼
        self.save_Button = QPushButton("저장")
        self.bottomR_VBoxLayout.addWidget(self.save_Button)

        # ALL PASS, ALL FAIL, ALL N/T, ALL N/A
        self.testAll_VBoxLayout = QVBoxLayout()
        self.allPass_RadioButton = QRadioButton("ALL PASS")
        self.testAll_VBoxLayout.addWidget(self.allPass_RadioButton)
        self.allNA_RadioButton = QRadioButton("ALL N/A")
        self.testAll_VBoxLayout.addWidget(self.allNA_RadioButton)
        self.allNT_RadioButton = QRadioButton("ALL N/T")
        self.testAll_VBoxLayout.addWidget(self.allNT_RadioButton)
        self.allFail_RadioButton = QRadioButton("ALL FAIL")
        self.testAll_VBoxLayout.addWidget(self.allFail_RadioButton)
        self.allNull_RadioButton = QRadioButton("ALL NULL")
        self.testAll_VBoxLayout.addWidget(self.allNull_RadioButton)
        self.bottomR_VBoxLayout.addLayout(self.testAll_VBoxLayout)

        self.bottom_HBoxLayout.addLayout(self.bottomR_VBoxLayout)
        self.right_VBoxLayout.addLayout(self.bottom_HBoxLayout)
        self.horizontalLayout.addLayout(self.right_VBoxLayout)

        # 메뉴바
        self.menubar = self.menuBar()
        self.menu = self.menubar.addMenu("Menu")
        self.menu.aboutToShow.connect(self.update_open_menu)

        self.setup = self.menubar.addMenu("Setup")
        self.actionLanguage = QAction("Language", self)
        self.actionField = QAction("Field", self)
        self.actionTest_List = QAction("Test List", self)
        self.actionExcel_Setting = QAction("Excel Setting", self)
        self.setup.addAction(self.actionLanguage)
        self.setup.addAction(self.actionField)
        self.setup.addAction(self.actionTest_List)
        self.setup.addAction(self.actionExcel_Setting)

        self.setCentralWidget(self.widget)

    def update_open_menu(self):
        self.menu.clear()
        self.menuOpen = self.menu.addMenu("Open")
        self.c.execute('SELECT * FROM Setup_Language')
        langList = self.c.fetchall()

        for lang in langList:
            subMenu = QAction(lang[0], self)
            subMenu.triggered.connect(partial(self.show_imgList, lang))
            self.menuOpen.addAction(subMenu)
        
        self.menu.addMenu(self.menuOpen)

        self.actionCreateExcel = QAction("Create Excel", self)
        self.actionClose = QAction("Close", self)
        self.menu.addAction(self.actionCreateExcel)
        self.menu.addAction(self.actionClose)

    def qbutton_clicked(self, state, idx, button):
        img_dir = self.img_dir[0] + '\\' + self.imgList[idx]
        pixmap = QPixmap(img_dir)
        self.img = Image.open(img_dir)

        self.img_Label.resize(self.img.width, self.img.height)

        if self.img.width < self.img_Label.width() and self.img.height < self.img_Label.height():
            pass
        elif self.img.width/self.img.height < self.img_Label.width()/self.img_Label.height():
            pixmap = pixmap.scaledToHeight(self.img_Label.height())
        else:
            pixmap = pixmap.scaledToHeight(self.img_Label.width())
        self.img_Label.setPixmap(QPixmap(pixmap))
        self.img_Label.setAlignment(Qt.AlignCenter)

        self.img_Label.mouseDoubleClickEvent = partial(self.double_click_img, img_dir)

    def double_click_img(self, img_dir, e):
        self.viewer = ImageViewer(img_dir)
        self.viewer.show()

    def show_imgList(self, lang):
        # 이미지 리스트 초기화
        for i in range(self.img_VBoxLayout.count()):
            self.img_VBoxLayout.itemAt(i).widget().deleteLater()

        # 이미지 경로 불러옴
        self.c.execute("SELECT 경로 FROM Setup_Language WHERE 언어=?", (lang[0],))
        self.img_dir = self.c.fetchone()
        self.imgList = [fn for fn in os.listdir(self.img_dir[0])
                if (fn.endswith('.png') or fn.endswith('.jpg'))]

        # 이미지 버튼 추가
        self.qbuttons = {}
        self.icons = {}
        for index, filename in enumerate(self.imgList):
            pixmap = QPixmap(self.img_dir[0] + '\\' + filename)
            pixmap = pixmap.scaled(40, 40, Qt.IgnoreAspectRatio)
            icon = QIcon()
            icon.addPixmap(pixmap)
            self.icons[index] = icon

        for index, icon in self.icons.items():
            button = QPushButtonIcon()
            button.setIcon(icon)
            button.clicked.connect(lambda state, button = button, idx = index :
                        self.qbutton_clicked(state, idx, button))
            self.img_VBoxLayout.addWidget(button)
            self.qbuttons[index] = button

        self.horizontalLayout.addLayout(self.img_VBoxLayout)

    def set_field(self):
        self.c.execute('SELECT * FROM Setup_Field')
        fieldList = self.c.fetchall()

        for i,field in enumerate(fieldList):
            if i%2==0:
                globals()[f'field_Label{self.cnt}'] = QLabel(field[0])
                self.field_gridLayout.addWidget(globals()[f'field_Label{self.cnt}'], 0,i)
                globals()[f'desc_LineEdit{self.cnt}'] = QLineEdit()
                self.field_gridLayout.addWidget(globals()[f'desc_LineEdit{self.cnt}'], 0,i+1)
            else:
                globals()[f'field_Label{self.cnt}'] = QLabel(field[0])
                self.field_gridLayout.addWidget(globals()[f'field_Label{self.cnt}'], 1,i-1)
                globals()[f'desc_LineEdit{self.cnt}'] = QLineEdit()
                self.field_gridLayout.addWidget(globals()[f'desc_LineEdit{self.cnt}'], 1,i)
            
            self.cnt += 1

class QPushButtonIcon(QPushButton):
    def __init__(self, parent = None):
        super().__init__(parent)
        self.setFixedHeight(50)
        self.setFixedWidth(50)
        self.setIconSize(QSize(40, 40))

if __name__ == "__main__":
    import sys
    app = QApplication(sys.argv)
    ui = Ui_MainWindow()
    ui.show()
    sys.exit(app.exec_())
